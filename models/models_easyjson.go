// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  models

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( Agent ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Agent ) UnmarshalJSON([]byte) error { return nil }
func ( Agent ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Agent ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Agent *Agent

func ( Context ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Context ) UnmarshalJSON([]byte) error { return nil }
func ( Context ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Context ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Context *Context

func ( Error ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Error ) UnmarshalJSON([]byte) error { return nil }
func ( Error ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Error ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Error *Error

func ( ErrorTransaction ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ErrorTransaction ) UnmarshalJSON([]byte) error { return nil }
func ( ErrorTransaction ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ErrorTransaction ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ErrorTransaction *ErrorTransaction

func ( ErrorsPayload ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ErrorsPayload ) UnmarshalJSON([]byte) error { return nil }
func ( ErrorsPayload ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ErrorsPayload ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ErrorsPayload *ErrorsPayload

func ( Exception ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Exception ) UnmarshalJSON([]byte) error { return nil }
func ( Exception ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Exception ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Exception *Exception

func ( Framework ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Framework ) UnmarshalJSON([]byte) error { return nil }
func ( Framework ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Framework ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Framework *Framework

func ( Language ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Language ) UnmarshalJSON([]byte) error { return nil }
func ( Language ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Language ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Language *Language

func ( LogRecord ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* LogRecord ) UnmarshalJSON([]byte) error { return nil }
func ( LogRecord ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* LogRecord ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_LogRecord *LogRecord

func ( Process ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Process ) UnmarshalJSON([]byte) error { return nil }
func ( Process ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Process ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Process *Process

func ( Request ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Request ) UnmarshalJSON([]byte) error { return nil }
func ( Request ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Request ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Request *Request

func ( RequestHeaders ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* RequestHeaders ) UnmarshalJSON([]byte) error { return nil }
func ( RequestHeaders ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* RequestHeaders ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_RequestHeaders *RequestHeaders

func ( RequestSocket ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* RequestSocket ) UnmarshalJSON([]byte) error { return nil }
func ( RequestSocket ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* RequestSocket ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_RequestSocket *RequestSocket

func ( RequestURL ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* RequestURL ) UnmarshalJSON([]byte) error { return nil }
func ( RequestURL ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* RequestURL ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_RequestURL *RequestURL

func ( Response ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Response ) UnmarshalJSON([]byte) error { return nil }
func ( Response ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Response ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Response *Response

func ( ResponseHeaders ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ResponseHeaders ) UnmarshalJSON([]byte) error { return nil }
func ( ResponseHeaders ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ResponseHeaders ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ResponseHeaders *ResponseHeaders

func ( Runtime ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Runtime ) UnmarshalJSON([]byte) error { return nil }
func ( Runtime ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Runtime ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Runtime *Runtime

func ( Service ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Service ) UnmarshalJSON([]byte) error { return nil }
func ( Service ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Service ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Service *Service

func ( Span ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Span ) UnmarshalJSON([]byte) error { return nil }
func ( Span ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Span ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Span *Span

func ( SpanContext ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SpanContext ) UnmarshalJSON([]byte) error { return nil }
func ( SpanContext ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SpanContext ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SpanContext *SpanContext

func ( SpanContextDb ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SpanContextDb ) UnmarshalJSON([]byte) error { return nil }
func ( SpanContextDb ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SpanContextDb ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SpanContextDb *SpanContextDb

func ( StacktraceFrame ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* StacktraceFrame ) UnmarshalJSON([]byte) error { return nil }
func ( StacktraceFrame ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* StacktraceFrame ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_StacktraceFrame *StacktraceFrame

func ( System ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* System ) UnmarshalJSON([]byte) error { return nil }
func ( System ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* System ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_System *System

func ( Transaction ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Transaction ) UnmarshalJSON([]byte) error { return nil }
func ( Transaction ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Transaction ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Transaction *Transaction

func ( TransactionSpanCount ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TransactionSpanCount ) UnmarshalJSON([]byte) error { return nil }
func ( TransactionSpanCount ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TransactionSpanCount ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TransactionSpanCount *TransactionSpanCount

func ( TransactionSpanCountDropped ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TransactionSpanCountDropped ) UnmarshalJSON([]byte) error { return nil }
func ( TransactionSpanCountDropped ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TransactionSpanCountDropped ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TransactionSpanCountDropped *TransactionSpanCountDropped

func ( TransactionsPayload ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TransactionsPayload ) UnmarshalJSON([]byte) error { return nil }
func ( TransactionsPayload ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TransactionsPayload ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TransactionsPayload *TransactionsPayload

func ( User ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* User ) UnmarshalJSON([]byte) error { return nil }
func ( User ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* User ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_User *User
